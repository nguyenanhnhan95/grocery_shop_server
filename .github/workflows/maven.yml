# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    branches: [ "main","production" ]
  pull_request:
    branches: [ "main","production" ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B package --file pom.xml
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USER_NAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Check Docker Images
        run: |
          echo "docker-hub connection successful"           
          check_image_docker_hub() {
          local image_name=$1
          if [ "$(docker images -q ${image_name})" ]; then
            echo "${image_name} existing"
            docker rmi ${image_name}
          else
            echo "${image_name} not found"
          fi
          }
          check_image_docker_hub "${{ secrets.DOCKER_HUB_NAME_TAG }}:grocery-shop-server"
          docker images ${{ secrets.DOCKER_HUB_NAME_TAG }}
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag ${{ secrets.DOCKER_HUB_NAME_TAG }}:grocery-shop-server
      - name: Docker Push
        run: docker push ${{ secrets.DOCKER_HUB_NAME_TAG }}:grocery-shop-server
      - name: Deploy to EC2 instance
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.EC2_HOST}}
          username: ${{secrets.EC2_USER_NAME}}
          key: ${{secrets.EC2_PRIVATE_KEY}}
          script: |
            echo "SSH connection successful"
            echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin
            - name: Replace environment variables in .env file
            run: |
            sudo sed -i 's#^DOMAIN_PORT_CLIENT=.*#DOMAIN_PORT_CLIENT=${{ secrets.DOMAIN_PORT_CLIENT }}#' .env
            sudo sed -i 's#^VITE_DOMAIN_CLIENT=.*#VITE_DOMAIN_CLIENT=${{ secrets.VITE_DOMAIN_CLIENT }}#' .env
            sudo cat .env
            - name: Stop and remove Docker containers
            run: |
            sudo docker stop $(sudo docker ps -a -q)
            sudo docker-compose down
            sudo docker volume prune
            sudo docker volume rm ubuntu_db
            sudo docker system prune -fa
            - name: Build and deploy Docker images
            run: |
            sudo docker pull ${{ secrets.DOCKER_HUB_NAME_TAG }}:grocery-shop-server
            # check_and_remove_image "${{ secrets.DOCKER_HUB_NAME_TAG }}:grocery-shop-client"
            sudo docker pull ${{ secrets.DOCKER_HUB_NAME_TAG }}:grocery-shop-client
            sudo docker images
            sudo docker-compose up -d
      # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
      - name: Update dependency graph
        uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_HUB_GROCERY_STORE }} 
