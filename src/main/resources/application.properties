spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:${MYSQL_PORT:3306}/grocery_shop?createDatabaseIfNotExist=true&useLegacyDatetimeCode=false&serverTimezone=UTC&allowPublicKeyRetrieval=true&useSSL=false
spring.datasource.username=${MYSQL_USER:codegym2023}
spring.datasource.password=${MYSQL_PASSWORD:codegym2023}
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
spring.mvc.pathmatch.matching-strategy = ANT_PATH_MATCHER
spring.main.allow-circular-references=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
spring.codec.max-in-memory-size=10MB
#spring.security.oauth2.resourceserver.jwt.issuer-uri= https://my-auth-server.com
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri=${DOMAIN_SERVER:http://localhost:8080}/oauth2/callback/{registrationId}
spring.security.oauth2.client.registration.google.scope=email,profile
spring.security.oauth2.client.registration.google.provider=google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.client-name=Google
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub
spring.security.oauth2.client.registration.facebook.client-id=${FACEBOOK_CLIENT_ID}
spring.security.oauth2.client.registration.facebook.client-secret=${FACEBOOK_CLIENT_SECRET}
spring.security.oauth2.client.registration.facebook.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.facebook.redirect-uri=${DOMAIN_SERVER:http://localhost:8080}/oauth2/callback/{registrationId}
spring.security.oauth2.client.registration.facebook.scope=email,public_profile,user_birthday
spring.security.oauth2.client.registration.facebook.provider=facebook
app.auth.tokenSecret=04ca023b39512e46d0c2cf4b48d5aac61d34302994c87ed4eff225dcf3b0a218739f3897051a057f9b846a69ea2927a587044164b7bae5e1306219d50b588cb1
app.auth.tokenExpirationMsec=864000000
app.cors.allowedOrigins=${DOMAIN_SERVER:http://localhost:8080},${DOMAIN_CLIENT:http://localhost:3000}
app.cors.domainServer=${DOMAIN_SERVER:http://localhost:8080}
app.cors.domainClient=${DOMAIN_CLIENT:http://localhost:3000}
app.oauth2.authorizedRedirectUris[0]=${DOMAIN_CLIENT:http://localhost:3000}/oauth2/redirect
app.oauth2.authorizedRedirectUris[1]=${DOMAIN_SERVER:http://localhost:8080}/oauth2/redirect
cron.expression.notification=${CRON_EXPRESSION_NOTIFICATION}
cron.expression.checkDateInvalidatedToken=${CRON_EXPRESSION_DATE_TOKEN}
#embeded send email
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${USERNAME_GOOGLE}
spring.mail.password=${PASSWORD_GOOGLE}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.transport.protocol=smtp
spring.mail.properties.mail.smtp.starttls.enable=true


#aws
aws.s3.region=${AWS_S3_REGION}
aws.s3.access.key=${AWS_S3_ACCESS_KEY}
aws.s3.secrete.key=${AWS_S3_SECRETE_KEY}
aws.s3.buckets.customer=${AWS_S3_BUCKETS_CUSTOMER}
aws.s3.buckets.domain=${AWS_S3_DOMAIN}

#path aws
filestore.root=filestore
filestore.folder=/files
filestore.folder.video=/video/
filestore.folder.image=filestore/files/image/
filestore.folder.image.avatar=filestore/files/image/avatar
filestore.folder.file=/file/